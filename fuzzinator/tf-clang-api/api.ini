# Copyright (c) 2024 Renata Hodovan, Akos Kiss.
#
# Licensed under the BSD 3-Clause License
# <LICENSE.rst or https://opensource.org/licenses/BSD-3-Clause>.
# This file may not be copied, modified, or distributed except
# according to those terms.

# Example Fuzzinator setup with TargetFuzz to define a
# basic API-based approach, where Fuzzinator asks TargetFuzz
# to generate a test case and then executes it right away, and
# iterates this in a loop, but restarts the loop after a given
# number of test cases (batch size of N).

[fuzz.clang-targetfuzz-api]
sut=clang
fuzzer=grammarinator.tool.FuzzerTool
batch=10000

[fuzz.clang-targetfuzz-api.fuzzer]
grammars=/scratch/eric/grammarinator/mygrammar/C.g4
grammar_annot=/scratch/eric/grammarinator/grammarinator/runtime/grammar_annots/c_grammar.py
generator=grammarinator.runtime.CGenerator
input=/scratch/eric/grammarinator/fuzzinator-setup/GVN.cpp/llm-seeds
seed_tree=/scratch/eric/grammarinator/fuzzinator-setup/GVN.cpp/llm-seed-trees
population=/scratch/eric/grammarinator/fuzzinator-setup/GVN.cpp/c_corpus_trees
rule=compilationUnit
max_depth=200
max_tokens=300
out_format=/scratch/eric/grammarinator-integration-examples/testout/clang/{uid}/%d.c
serializer=grammarinator.runtime.c_custom_serializer
recursion_limit=100000
encoding=utf-8
errors=strict
antlr=/home/eric/.antlerinator/antlr-4.13.1-complete.jar
tree_extension=grtj
fuzzinator=True
feedback_type=add_scanrun



; parser_dir="results_test/nesting/target/CM%d.c/grammars"

; batch=1000
